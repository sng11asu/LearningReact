{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\learnreact\\\\src\\\\App.js\";\nimport React from 'react';\nimport './App.css';\nimport Footer from './components/Footer';\nimport Header from './components/Header'; //import MainContent from './MainContent'\n\nimport Contactcard from './components/Contactcard';\nimport photosData from './components/photosData';\n\nfunction getPhotos(method, url) {\n  return new Promise(function (resolve, reject) {\n    let photos = new XMLHttpRequest();\n    photos.open(method, url);\n    photos.send();\n    console.log(photos.response);\n  });\n}\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      count: 0\n    };\n  }\n\n  handleClick() {\n    console.log(\"clicked\");\n  }\n\n  render() {\n    const jokeComponents = photosData.map(photo => /*#__PURE__*/React.createElement(Contactcard, {\n      key: photo.id,\n      id: photo.id,\n      imgTitle: photo.title,\n      imgUrl: photo.url,\n      albumId: photo.albumId,\n      thumbnail: photo.thumbnail,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 50\n      }\n    }));\n    let wordDisplay;\n\n    if (this.state.isLoggedin) {\n      wordDisplay = \"in\";\n    } else {\n      wordDisplay = 'out';\n    }\n\n    function myFunction() {}\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }\n    }, \"Click me\"), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }\n    }, this.state.count, \" \"), jokeComponents, /*#__PURE__*/React.createElement(\"h1\", {\n      style: styles,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }\n    }, \"Good \", Greet()), /*#__PURE__*/React.createElement(Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }\n    }));\n  }\n\n}\n\nconst styles = {\n  color: \"red\",\n  backgroundColor: \"cyan\",\n  fontSize: 100\n};\n\nfunction Greet() {\n  const date = new Date();\n  const hours = date.getHours();\n  let timeOfDay;\n\n  if (hours < 12) {\n    timeOfDay = \"morning\";\n    styles.color = 'red';\n  } else if (hours >= 12 && hours < 17) {\n    timeOfDay = 'afternoon';\n    styles.color = 'purple';\n  } else {\n    timeOfDay = \"night\";\n    styles.color = 'blue';\n  }\n\n  return timeOfDay;\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Projects/learnreact/src/App.js"],"names":["React","Footer","Header","Contactcard","photosData","getPhotos","method","url","Promise","resolve","reject","photos","XMLHttpRequest","open","send","console","log","response","App","Component","constructor","state","count","handleClick","render","jokeComponents","map","photo","id","title","albumId","thumbnail","wordDisplay","isLoggedin","myFunction","styles","Greet","color","backgroundColor","fontSize","date","Date","hours","getHours","timeOfDay"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport Footer from './components/Footer'\nimport Header from './components/Header'\n//import MainContent from './MainContent'\nimport Contactcard from './components/Contactcard';\nimport photosData from './components/photosData'\n\nfunction getPhotos(method, url){\n  return new Promise(function(resolve, reject){\n    let photos = new XMLHttpRequest()\n    photos.open(method, url)\n    photos.send();\n    console.log(photos.response)\n  })\n  \n}\n\n\nclass App extends React.Component {\n\nconstructor(){\n  super()\n  this.state = {\n    count: 0\n  }\n}\n\nhandleClick(){\n  console.log(\"clicked\")\n}\n\n render(){\n  const jokeComponents = photosData.map(photo => <Contactcard key = {photo.id} id = {photo.id} imgTitle={photo.title} imgUrl = {photo.url} albumId = {photo.albumId} thumbnail = {photo.thumbnail} />)\n  let wordDisplay\n  if (this.state.isLoggedin){\n    wordDisplay = \"in\"\n  }else{\n    wordDisplay = 'out'\n  }\n  \n  function myFunction(){\n\n  }\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <button onClick={this.handleClick}>Click me</button>\n      <h1>{this.state.count} </h1>\n      {jokeComponents}\n      <h1 style={styles}>Good {Greet()}</h1>\n      <Footer />\n    </div>\n  );\n}\n}\n\nconst styles = {\n  color:\"red\",\n  backgroundColor:\"cyan\",\n  fontSize: 100\n}\n\nfunction Greet(){\n  const date = new Date()\n  const hours = date.getHours()\n  let timeOfDay\n  if (hours < 12){\n    timeOfDay = \"morning\"\n    styles.color = 'red'\n  }else if(hours >= 12 && hours <17){\n    timeOfDay = 'afternoon'\n    styles.color = 'purple'\n  }else{\n    timeOfDay = \"night\"\n    styles.color = 'blue'\n  }\n  return(\n    timeOfDay\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}