{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\learnreact\\\\src\\\\App.js\";\nimport React from 'react';\nimport './App.css';\nimport Footer from './components/Footer';\nimport Header from './components/Header';\nimport MainContent from './MainContent';\nimport Contactcard from './components/Contactcard';\nimport photosData from './components/photosData';\n/*\nfunction getPhotos(method, url){\n  return new Promise(function(resolve, reject){\n    let photos = new XMLHttpRequest()\n    photos.open(method, url)\n    photos.send();\n    console.log(photos.response)\n  })\n  \n}*/\n\nfunction getData(method, url) {\n  return new Promise(function (resolve, reject) {\n    var xhr = new XMLHttpRequest();\n    xhr.open(method, url);\n\n    xhr.onload = function () {\n      if (this.status >= 200 && this.status < 300) {\n        resolve(xhr.response);\n      } else {\n        reject({\n          status: this.status,\n          statusText: xhr.statusText\n        });\n      }\n    };\n\n    xhr.onerror = function () {\n      reject({\n        status: this.status,\n        statusText: xhr.statusText\n      });\n    };\n\n    xhr.send(); //console.log(xhr)\n  });\n}\n\nfunction App() {\n  let photoJson = '';\n  getData('GET', 'http://jsonplaceholder.typicode.com/photos').then(function (data) {\n    photoJson = JSON.parse(data); //console.log(photoJson)\n  });\n  console.log(photosData);\n  const jokeComponents = photoJson.map(photo => /*#__PURE__*/React.createElement(Contactcard, {\n    key: photo.id,\n    id: photo.id,\n    imgTitle: photo.title,\n    imgUrl: photo.url,\n    albumId: photo.albumId,\n    thumbnail: photo.thumbnail,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 48\n    }\n  }));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, jokeComponents, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(MainContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    style: styles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 3\n    }\n  }, \"Good \", Greet()), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }));\n}\n\nconst styles = {\n  color: \"red\",\n  backgroundColor: \"cyan\",\n  fontSize: 100\n};\n\nfunction Greet() {\n  const date = new Date();\n  const hours = date.getHours();\n  let timeOfDay;\n\n  if (hours < 12) {\n    timeOfDay = \"morning\";\n    styles.color = 'red';\n  } else if (hours >= 12 && hours < 17) {\n    timeOfDay = 'afternoon';\n    styles.color = 'purple';\n  } else {\n    timeOfDay = \"night\";\n    styles.color = 'blue';\n  }\n\n  return timeOfDay;\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Projects/learnreact/src/App.js"],"names":["React","Footer","Header","MainContent","Contactcard","photosData","getData","method","url","Promise","resolve","reject","xhr","XMLHttpRequest","open","onload","status","response","statusText","onerror","send","App","photoJson","then","data","JSON","parse","console","log","jokeComponents","map","photo","id","title","albumId","thumbnail","styles","Greet","color","backgroundColor","fontSize","date","Date","hours","getHours","timeOfDay"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport Footer from './components/Footer'\nimport Header from './components/Header'\nimport MainContent from './MainContent'\nimport Contactcard from './components/Contactcard';\nimport photosData from './components/photosData'\n/*\nfunction getPhotos(method, url){\n  return new Promise(function(resolve, reject){\n    let photos = new XMLHttpRequest()\n    photos.open(method, url)\n    photos.send();\n    console.log(photos.response)\n  })\n  \n}*/\n\nfunction getData(method, url){\n  return new Promise(function(resolve, reject){\n      var xhr = new XMLHttpRequest();\n      xhr.open(method, url);\n      xhr.onload = function(){\n          if(this.status >= 200 && this.status < 300){\n              resolve(xhr.response);\n          }else{\n              reject({\n                  status: this.status,\n                  statusText: xhr.statusText\n              });    \n          }\n      };\n      xhr.onerror = function(){\n          reject({\n              status: this.status,\n              statusText: xhr.statusText\n          });\n      };\n      xhr.send();\n      //console.log(xhr)\n  });\n  \n  }\n  \n\n\nfunction App() {\n  let photoJson = '';\n  getData('GET' , 'http://jsonplaceholder.typicode.com/photos').then(function(data){\n    photoJson = JSON.parse(data)\n    //console.log(photoJson)\n  });\n  console.log(photosData)\n const jokeComponents = photoJson.map(photo => <Contactcard key = {photo.id} id = {photo.id} imgTitle={photo.title} imgUrl = {photo.url} albumId = {photo.albumId} thumbnail = {photo.thumbnail} />)\n  return (\n    <div className=\"App\">\n       {jokeComponents}\n      <Header />\n      <MainContent />\n  <h1 style={styles}>Good {Greet()}</h1>\n      <Footer />\n    </div>\n  );\n}\n\nconst styles = {\n  color:\"red\",\n  backgroundColor:\"cyan\",\n  fontSize: 100\n}\n\nfunction Greet(){\n  const date = new Date()\n  const hours = date.getHours()\n  let timeOfDay\n  if (hours < 12){\n    timeOfDay = \"morning\"\n    styles.color = 'red'\n  }else if(hours >= 12 && hours <17){\n    timeOfDay = 'afternoon'\n    styles.color = 'purple'\n  }else{\n    timeOfDay = \"night\"\n    styles.color = 'blue'\n  }\n  return(\n    timeOfDay\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}