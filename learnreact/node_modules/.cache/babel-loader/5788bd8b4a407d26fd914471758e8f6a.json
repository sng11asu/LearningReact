{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\learnreact\\\\src\\\\App.js\";\nimport React from 'react';\nimport './App.css';\nimport Footer from './components/Footer';\nimport Header from './components/Header';\nimport MainContent from './MainContent';\nimport Contactcard from './components/Contactcard';\nimport jokesData from './components/Jokesdata';\n\nfunction getPhotos(method, url) {\n  return new Promise(function (resolve, reject) {\n    let photos = new XMLHttpRequest();\n    photos.open(method, url);\n    photos.send();\n    console.log(photos.response);\n  });\n}\n\nfunction App() {\n  /*let photoJson = '';\n  getPhotos('GET' , 'http://jsonplaceholder.typicode.com/photos').then(function(data){\n    photoJson = JSON.parse(data)\n    console.log(photoJson)\n  });\n  */\n  const jokeComponents = jokesData.map(joke => /*#__PURE__*/React.createElement(Contactcard, {\n    key: joke.id,\n    question: joke.question,\n    punchline: joke.punchline,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 47\n    }\n  }));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, jokeComponents, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(MainContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    style: styles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 3\n    }\n  }, \"Good \", Greet()), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }));\n}\n\nconst styles = {\n  color: \"red\",\n  backgroundColor: \"cyan\",\n  fontSize: 100\n};\n\nfunction Greet() {\n  const date = new Date();\n  const hours = date.getHours();\n  let timeOfDay;\n\n  if (hours < 12) {\n    timeOfDay = \"morning\";\n    styles.color = 'red';\n  } else if (hours >= 12 && hours < 17) {\n    timeOfDay = 'afternoon';\n    styles.color = 'purple';\n  } else {\n    timeOfDay = \"night\";\n    styles.color = 'blue';\n  }\n\n  return timeOfDay;\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Projects/learnreact/src/App.js"],"names":["React","Footer","Header","MainContent","Contactcard","jokesData","getPhotos","method","url","Promise","resolve","reject","photos","XMLHttpRequest","open","send","console","log","response","App","jokeComponents","map","joke","id","question","punchline","styles","Greet","color","backgroundColor","fontSize","date","Date","hours","getHours","timeOfDay"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;;AAEA,SAASC,SAAT,CAAmBC,MAAnB,EAA2BC,GAA3B,EAA+B;AAC7B,SAAO,IAAIC,OAAJ,CAAY,UAASC,OAAT,EAAkBC,MAAlB,EAAyB;AAC1C,QAAIC,MAAM,GAAG,IAAIC,cAAJ,EAAb;AACAD,IAAAA,MAAM,CAACE,IAAP,CAAYP,MAAZ,EAAoBC,GAApB;AACAI,IAAAA,MAAM,CAACG,IAAP;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,MAAM,CAACM,QAAnB;AACD,GALM,CAAP;AAOD;;AAGD,SAASC,GAAT,GAAe;AACb;;;;;;AAOD,QAAMC,cAAc,GAAGf,SAAS,CAACgB,GAAV,CAAcC,IAAI,iBAAI,oBAAC,WAAD;AAAa,IAAA,GAAG,EAAIA,IAAI,CAACC,EAAzB;AAA6B,IAAA,QAAQ,EAAED,IAAI,CAACE,QAA5C;AAAsD,IAAA,SAAS,EAAIF,IAAI,CAACG,SAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAtB,CAAvB;AACC,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACIL,cADJ,eAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,eAIF;AAAI,IAAA,KAAK,EAAEM,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAyBC,KAAK,EAA9B,CAJE,eAKE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CADF;AASD;;AAED,MAAMD,MAAM,GAAG;AACbE,EAAAA,KAAK,EAAC,KADO;AAEbC,EAAAA,eAAe,EAAC,MAFH;AAGbC,EAAAA,QAAQ,EAAE;AAHG,CAAf;;AAMA,SAASH,KAAT,GAAgB;AACd,QAAMI,IAAI,GAAG,IAAIC,IAAJ,EAAb;AACA,QAAMC,KAAK,GAAGF,IAAI,CAACG,QAAL,EAAd;AACA,MAAIC,SAAJ;;AACA,MAAIF,KAAK,GAAG,EAAZ,EAAe;AACbE,IAAAA,SAAS,GAAG,SAAZ;AACAT,IAAAA,MAAM,CAACE,KAAP,GAAe,KAAf;AACD,GAHD,MAGM,IAAGK,KAAK,IAAI,EAAT,IAAeA,KAAK,GAAE,EAAzB,EAA4B;AAChCE,IAAAA,SAAS,GAAG,WAAZ;AACAT,IAAAA,MAAM,CAACE,KAAP,GAAe,QAAf;AACD,GAHK,MAGD;AACHO,IAAAA,SAAS,GAAG,OAAZ;AACAT,IAAAA,MAAM,CAACE,KAAP,GAAe,MAAf;AACD;;AACD,SACEO,SADF;AAGD;;AAED,eAAehB,GAAf","sourcesContent":["import React from 'react';\nimport './App.css';\nimport Footer from './components/Footer'\nimport Header from './components/Header'\nimport MainContent from './MainContent'\nimport Contactcard from './components/Contactcard';\nimport jokesData from './components/Jokesdata'\n\nfunction getPhotos(method, url){\n  return new Promise(function(resolve, reject){\n    let photos = new XMLHttpRequest()\n    photos.open(method, url)\n    photos.send();\n    console.log(photos.response)\n  })\n  \n}\n\n\nfunction App() {\n  /*let photoJson = '';\n  getPhotos('GET' , 'http://jsonplaceholder.typicode.com/photos').then(function(data){\n    photoJson = JSON.parse(data)\n    console.log(photoJson)\n  });\n  */\n\n const jokeComponents = jokesData.map(joke => <Contactcard key = {joke.id} question={joke.question} punchline = {joke.punchline} />)\n  return (\n    <div className=\"App\">\n       {jokeComponents}\n      <Header />\n      <MainContent />\n  <h1 style={styles}>Good {Greet()}</h1>\n      <Footer />\n    </div>\n  );\n}\n\nconst styles = {\n  color:\"red\",\n  backgroundColor:\"cyan\",\n  fontSize: 100\n}\n\nfunction Greet(){\n  const date = new Date()\n  const hours = date.getHours()\n  let timeOfDay\n  if (hours < 12){\n    timeOfDay = \"morning\"\n    styles.color = 'red'\n  }else if(hours >= 12 && hours <17){\n    timeOfDay = 'afternoon'\n    styles.color = 'purple'\n  }else{\n    timeOfDay = \"night\"\n    styles.color = 'blue'\n  }\n  return(\n    timeOfDay\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}