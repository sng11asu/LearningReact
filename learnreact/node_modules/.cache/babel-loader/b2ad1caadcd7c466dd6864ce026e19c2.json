{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\learnreact\\\\src\\\\App.js\";\nimport React from 'react';\nimport './App.css';\nimport Footer from './components/Footer';\nimport Header from './components/Header'; //import MainContent from './MainContent'\n\nimport Contactcard from './components/Contactcard';\nimport photosData from './components/photosData';\n\nfunction getPhotos(method, url) {\n  return new Promise(function (resolve, reject) {\n    let photos = new XMLHttpRequest();\n    photos.open(method, url);\n    photos.send();\n    console.log(photos.response);\n  });\n}\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      loading: false,\n      character: {}\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleClick() {\n    this.setState(prevState => {\n      return {\n        isLoggedin: !prevState.isLoggedin\n      };\n    });\n  }\n\n  handleChange(event) {\n    this.setState({\n      fName: event.target.value\n    });\n  }\n\n  componentDidMount() {\n    this.setState({\n      loading: true\n    });\n    fetch(\"https://swapi.dev/api/people/1\").then(response => response.json()).then(data => this.setState({\n      character: data,\n      loading: false,\n      fName: \"\"\n    }));\n  }\n\n  render() {\n    const jokeComponents = photosData.map(photo => /*#__PURE__*/React.createElement(Contactcard, {\n      key: photo.id,\n      id: photo.id,\n      imgTitle: photo.title,\n      imgUrl: photo.url,\n      albumId: photo.albumId,\n      thumbnail: photo.thumbnail,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 50\n      }\n    }));\n    let wordDisplay;\n\n    if (this.state.isLoggedin) {\n      wordDisplay = \"in\";\n    } else {\n      wordDisplay = 'out';\n    }\n\n    console.log(this.state.chara);\n    let buttonText = this.state.isLoggedin ? \"Log Out\" : \"Log In\";\n    let displayText = this.state.isLoggedin ? \"Loged In\" : \"Loged Out YOOOcd ..\";\n    let people = this.state.loading ? \"Loading...\" : this.state.character.name;\n    return /*#__PURE__*/React.createElement(\"form\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"First name\",\n      value: this.state.fName,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 3\n      }\n    }, people, this.state.fName), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 7\n      }\n    }, buttonText), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }\n    }, displayText), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }\n    }, this.state.count, \" \"), /*#__PURE__*/React.createElement(\"h1\", {\n      style: styles,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }\n    }, \"Good Morning!\"), /*#__PURE__*/React.createElement(Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }\n    }));\n  }\n\n}\n\nconst styles = {\n  color: \"red\",\n  backgroundColor: \"cyan\",\n  fontSize: 100\n};\n\nfunction Greet() {\n  const date = new Date();\n  const hours = date.getHours();\n  let timeOfDay;\n\n  if (hours < 12) {\n    timeOfDay = \"morning\";\n    styles.color = 'red';\n  } else if (hours >= 12 && hours < 17) {\n    timeOfDay = 'afternoon';\n    styles.color = 'purple';\n  } else {\n    timeOfDay = \"night\";\n    styles.color = 'blue';\n  }\n\n  return timeOfDay;\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Projects/learnreact/src/App.js"],"names":["React","Footer","Header","Contactcard","photosData","getPhotos","method","url","Promise","resolve","reject","photos","XMLHttpRequest","open","send","console","log","response","App","Component","constructor","state","loading","character","handleClick","bind","handleChange","setState","prevState","isLoggedin","event","fName","target","value","componentDidMount","fetch","then","json","data","render","jokeComponents","map","photo","id","title","albumId","thumbnail","wordDisplay","chara","buttonText","displayText","people","name","count","styles","color","backgroundColor","fontSize","Greet","date","Date","hours","getHours","timeOfDay"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport Footer from './components/Footer'\nimport Header from './components/Header'\n//import MainContent from './MainContent'\nimport Contactcard from './components/Contactcard';\nimport photosData from './components/photosData'\n\nfunction getPhotos(method, url){\n  return new Promise(function(resolve, reject){\n    let photos = new XMLHttpRequest()\n    photos.open(method, url)\n    photos.send();\n    console.log(photos.response)\n  })\n  \n}\n\n\nclass App extends React.Component {\n\nconstructor(){\n  super()\n  this.state = {\n    loading: false,\n    character : {}\n  }\n  this.handleClick = this.handleClick.bind(this)\n  this.handleChange = this.handleChange.bind(this)\n}\n\nhandleClick(){\n  this.setState(prevState => {\n      return{\n        isLoggedin : !prevState.isLoggedin\n      }\n  })\n}\n\nhandleChange(event){\n  this.setState({fName: event.target.value}) \n}\n\ncomponentDidMount(){\n  this.setState({\n    loading: true\n  })\n  fetch(\"https://swapi.dev/api/people/1\")\n  .then(response => response.json())\n  .then(data => this.setState({\n    character: data,\n    loading: false,\n    fName: \"\"\n  }))\n}\n\n render(){\n  const jokeComponents = photosData.map(photo => <Contactcard key = {photo.id} id = {photo.id} imgTitle={photo.title} imgUrl = {photo.url} albumId = {photo.albumId} thumbnail = {photo.thumbnail} />)\n  let wordDisplay\n  if (this.state.isLoggedin){\n    wordDisplay = \"in\"\n  }else{\n    wordDisplay = 'out'\n  }\n  console.log(this.state.chara)\n\n  let buttonText = this.state.isLoggedin ? \"Log Out\" : \"Log In\"\n  let displayText = this.state.isLoggedin ? \"Loged In\" : \"Loged Out YOOOcd ..\"\n  let people = this.state.loading ? \"Loading...\" : this.state.character.name\n  return ( \n    <form className=\"App\">     \n      <Header />\n      <input type=\"text\" placeholder=\"First name\" value={this.state.fName } onChange={this.handleChange}></input>\n  <h2>{people}{this.state.fName}</h2>\n      <button onClick={this.handleClick}>{buttonText}</button>\n      <h3>{displayText}</h3>\n      <h1>{this.state.count} </h1>\n      <h1 style={styles}>Good Morning!</h1>\n      <Footer />\n    </form>\n  );\n}\n}\n\nconst styles = {\n  color:\"red\",\n  backgroundColor:\"cyan\",\n  fontSize: 100\n}\n\nfunction Greet(){\n  const date = new Date()\n  const hours = date.getHours()\n  let timeOfDay\n  if (hours < 12){\n    timeOfDay = \"morning\"\n    styles.color = 'red'\n  }else if(hours >= 12 && hours <17){\n    timeOfDay = 'afternoon'\n    styles.color = 'purple'\n  }else{\n    timeOfDay = \"night\"\n    styles.color = 'blue'\n  }\n  return(\n    timeOfDay\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}