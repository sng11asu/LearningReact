{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\learnreact\\\\src\\\\App.js\";\nimport React from 'react';\nimport './App.css';\nimport Footer from './components/Footer';\nimport Header from './components/Header'; //import MainContent from './MainContent'\n\nimport Contactcard from './components/Contactcard';\nimport photosData from './components/photosData';\n\nfunction getPhotos(method, url) {\n  return new Promise(function (resolve, reject) {\n    let photos = new XMLHttpRequest();\n    photos.open(method, url);\n    photos.send();\n    console.log(photos.response);\n  });\n}\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      isLoggedin: false,\n      isLoading: true\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    this.setState(prevState => {\n      const loginStatus = this.prevState.map(login => {\n        login.isLoggedin = !login.isLoggedin;\n        return login;\n      });\n      return {\n        login: loginStatus\n      };\n    });\n  }\n\n  componentDidMount() {\n    setTimeout(() => {\n      this.setState({\n        isLoading: false\n      });\n    }, 1500);\n  }\n\n  render() {\n    const jokeComponents = photosData.map(photo => /*#__PURE__*/React.createElement(Contactcard, {\n      key: photo.id,\n      id: photo.id,\n      imgTitle: photo.title,\n      imgUrl: photo.url,\n      albumId: photo.albumId,\n      thumbnail: photo.thumbnail,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 50\n      }\n    }));\n    let wordDisplay;\n\n    if (this.state.isLoggedin) {\n      wordDisplay = \"in\";\n    } else {\n      wordDisplay = 'out';\n    }\n\n    function myFunction() {}\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 5\n      }\n    }, this.state.isLoading === true ? /*#__PURE__*/React.createElement(\"header\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 40\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 48\n      }\n    }, \"Loading...\")) : /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }\n    }), this.state.isLoggedin === true ? /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 41\n      }\n    }, \"Log Out\") : /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 95\n      }\n    }, \"Login\"), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }\n    }, this.state.count, \" \"), jokeComponents, /*#__PURE__*/React.createElement(\"h1\", {\n      style: styles,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }\n    }, \"Good Morning!\"), /*#__PURE__*/React.createElement(Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }\n    }));\n  }\n\n}\n\nconst styles = {\n  color: \"red\",\n  backgroundColor: \"cyan\",\n  fontSize: 100\n};\n\nfunction Greet() {\n  const date = new Date();\n  const hours = date.getHours();\n  let timeOfDay;\n\n  if (hours < 12) {\n    timeOfDay = \"morning\";\n    styles.color = 'red';\n  } else if (hours >= 12 && hours < 17) {\n    timeOfDay = 'afternoon';\n    styles.color = 'purple';\n  } else {\n    timeOfDay = \"night\";\n    styles.color = 'blue';\n  }\n\n  return timeOfDay;\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Projects/learnreact/src/App.js"],"names":["React","Footer","Header","Contactcard","photosData","getPhotos","method","url","Promise","resolve","reject","photos","XMLHttpRequest","open","send","console","log","response","App","Component","constructor","state","isLoggedin","isLoading","handleClick","bind","setState","prevState","loginStatus","map","login","componentDidMount","setTimeout","render","jokeComponents","photo","id","title","albumId","thumbnail","wordDisplay","myFunction","count","styles","color","backgroundColor","fontSize","Greet","date","Date","hours","getHours","timeOfDay"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,MAAP,MAAmB,qBAAnB,C,CACA;;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;;AAEA,SAASC,SAAT,CAAmBC,MAAnB,EAA2BC,GAA3B,EAA+B;AAC7B,SAAO,IAAIC,OAAJ,CAAY,UAASC,OAAT,EAAkBC,MAAlB,EAAyB;AAC1C,QAAIC,MAAM,GAAG,IAAIC,cAAJ,EAAb;AACAD,IAAAA,MAAM,CAACE,IAAP,CAAYP,MAAZ,EAAoBC,GAApB;AACAI,IAAAA,MAAM,CAACG,IAAP;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,MAAM,CAACM,QAAnB;AACD,GALM,CAAP;AAOD;;AAGD,MAAMC,GAAN,SAAkBlB,KAAK,CAACmB,SAAxB,CAAkC;AAElCC,EAAAA,WAAW,GAAE;AACX;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,UAAU,EAAE,KADD;AAEXC,MAAAA,SAAS,EAAE;AAFA,KAAb;AAIA,SAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;AACD;;AAEDD,EAAAA,WAAW,GAAE;AACX,SAAKE,QAAL,CAAcC,SAAS,IAAI;AACzB,YAAMC,WAAW,GAAG,KAAKD,SAAL,CAAeE,GAAf,CAAmBC,KAAK,IAAI;AAC9CA,QAAAA,KAAK,CAACR,UAAN,GAAmB,CAACQ,KAAK,CAACR,UAA1B;AACA,eAAOQ,KAAP;AACG,OAHe,CAApB;AAIA,aAAO;AACLA,QAAAA,KAAK,EAAEF;AADF,OAAP;AAGD,KARD;AASD;;AAGDG,EAAAA,iBAAiB,GAAE;AACjBC,IAAAA,UAAU,CAAC,MAAK;AACd,WAAKN,QAAL,CAAc;AACZH,QAAAA,SAAS,EAAE;AADC,OAAd;AAGD,KAJS,EAIP,IAJO,CAAV;AAKD;;AAEAU,EAAAA,MAAM,GAAE;AACP,UAAMC,cAAc,GAAG9B,UAAU,CAACyB,GAAX,CAAeM,KAAK,iBAAI,oBAAC,WAAD;AAAa,MAAA,GAAG,EAAIA,KAAK,CAACC,EAA1B;AAA8B,MAAA,EAAE,EAAID,KAAK,CAACC,EAA1C;AAA8C,MAAA,QAAQ,EAAED,KAAK,CAACE,KAA9D;AAAqE,MAAA,MAAM,EAAIF,KAAK,CAAC5B,GAArF;AAA0F,MAAA,OAAO,EAAI4B,KAAK,CAACG,OAA3G;AAAoH,MAAA,SAAS,EAAIH,KAAK,CAACI,SAAvI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAxB,CAAvB;AACA,QAAIC,WAAJ;;AACA,QAAI,KAAKnB,KAAL,CAAWC,UAAf,EAA0B;AACxBkB,MAAAA,WAAW,GAAG,IAAd;AACD,KAFD,MAEK;AACHA,MAAAA,WAAW,GAAG,KAAd;AACD;;AAED,aAASC,UAAT,GAAqB,CAEpB;;AAED,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKpB,KAAL,CAAWE,SAAX,KAAyB,IAAzB,gBAAgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAR,CAAhC,gBACD,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGG,KAAKF,KAAL,CAAWC,UAAX,KAA0B,IAA1B,gBAAiC;AAAQ,MAAA,OAAO,EAAE,KAAKE,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAjC,gBAAuF;AAAQ,MAAA,OAAO,EAAE,KAAKA,WAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAH1F,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAKH,KAAL,CAAWqB,KAAhB,MALF,EAMGR,cANH,eAOE;AAAI,MAAA,KAAK,EAAES,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAPF,eAQE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,CADF;AAYD;;AAzDiC;;AA4DlC,MAAMA,MAAM,GAAG;AACbC,EAAAA,KAAK,EAAC,KADO;AAEbC,EAAAA,eAAe,EAAC,MAFH;AAGbC,EAAAA,QAAQ,EAAE;AAHG,CAAf;;AAMA,SAASC,KAAT,GAAgB;AACd,QAAMC,IAAI,GAAG,IAAIC,IAAJ,EAAb;AACA,QAAMC,KAAK,GAAGF,IAAI,CAACG,QAAL,EAAd;AACA,MAAIC,SAAJ;;AACA,MAAIF,KAAK,GAAG,EAAZ,EAAe;AACbE,IAAAA,SAAS,GAAG,SAAZ;AACAT,IAAAA,MAAM,CAACC,KAAP,GAAe,KAAf;AACD,GAHD,MAGM,IAAGM,KAAK,IAAI,EAAT,IAAeA,KAAK,GAAE,EAAzB,EAA4B;AAChCE,IAAAA,SAAS,GAAG,WAAZ;AACAT,IAAAA,MAAM,CAACC,KAAP,GAAe,QAAf;AACD,GAHK,MAGD;AACHQ,IAAAA,SAAS,GAAG,OAAZ;AACAT,IAAAA,MAAM,CAACC,KAAP,GAAe,MAAf;AACD;;AACD,SACEQ,SADF;AAGD;;AAED,eAAelC,GAAf","sourcesContent":["import React from 'react';\nimport './App.css';\nimport Footer from './components/Footer'\nimport Header from './components/Header'\n//import MainContent from './MainContent'\nimport Contactcard from './components/Contactcard';\nimport photosData from './components/photosData'\n\nfunction getPhotos(method, url){\n  return new Promise(function(resolve, reject){\n    let photos = new XMLHttpRequest()\n    photos.open(method, url)\n    photos.send();\n    console.log(photos.response)\n  })\n  \n}\n\n\nclass App extends React.Component {\n\nconstructor(){\n  super()\n  this.state = {\n    isLoggedin: false,\n    isLoading: true\n  }\n  this.handleClick = this.handleClick.bind(this) \n}\n\nhandleClick(){\n  this.setState(prevState => {\n    const loginStatus = this.prevState.map(login => {\n      login.isLoggedin = !login.isLoggedin\n      return login\n        })\n    return {\n      login: loginStatus\n    }\n  })\n}\n\n\ncomponentDidMount(){\n  setTimeout(()=> {\n    this.setState({\n      isLoading: false\n    })\n  }, 1500)\n}\n\n render(){\n  const jokeComponents = photosData.map(photo => <Contactcard key = {photo.id} id = {photo.id} imgTitle={photo.title} imgUrl = {photo.url} albumId = {photo.albumId} thumbnail = {photo.thumbnail} />)\n  let wordDisplay\n  if (this.state.isLoggedin){\n    wordDisplay = \"in\"\n  }else{\n    wordDisplay = 'out'\n  }\n  \n  function myFunction(){\n\n  }\n\n  return (\n    <div className=\"App\">\n      {this.state.isLoading === true ? <header><h2>Loading...</h2></header>:\n      <Header />}\n      {this.state.isLoggedin === true ? <button onClick={this.handleClick}>Log Out</button> : <button onClick={this.handleClick}>Login</button>}\n      \n      <h1>{this.state.count} </h1>\n      {jokeComponents}\n      <h1 style={styles}>Good Morning!</h1>\n      <Footer />\n    </div>\n  );\n}\n}\n\nconst styles = {\n  color:\"red\",\n  backgroundColor:\"cyan\",\n  fontSize: 100\n}\n\nfunction Greet(){\n  const date = new Date()\n  const hours = date.getHours()\n  let timeOfDay\n  if (hours < 12){\n    timeOfDay = \"morning\"\n    styles.color = 'red'\n  }else if(hours >= 12 && hours <17){\n    timeOfDay = 'afternoon'\n    styles.color = 'purple'\n  }else{\n    timeOfDay = \"night\"\n    styles.color = 'blue'\n  }\n  return(\n    timeOfDay\n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}